{
  "hash": "a0eb0326c5edf56c88c36bed519722cd",
  "result": {
    "markdown": "---\ntitle: 'Speed cameras in Toronto'\nauthor: Mark Edney\ndate: '2022-02-16'\nslug: []\ncategories:\n  - Project\n  - R\n  - Leaflet\ndraft: false\ndescription: 'Creating a Leaflet map of all the speed cameras in Toronto'\nimage: 'toronto_traffic.jpg'\narchives:\n  - 2022/02\n---\n\n\n![](toronto_traffic.jpg)\n\n> Photo by [Sepideh Golchin Rad](https://unsplash.com/@sepidehgolchin?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText) on [Unsplash](https://unsplash.com/?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)\n\n> This project was originally written on 02/01/2021 as part of the Data Products course for the Data Science Specialization from Johns Hopkins University on Coursera\n\n## Objective\n\nThis report plots the speed cameras in the Greater Toronto Area from the data provided by Open Toronto, which can be found [here](https://open.toronto.ca/dataset/automated-speed-enforcement-locations/).\n\n## Initialization\n\nThe following code is used to initialize the required libraries.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"opendatatoronto\", repos = \"https://cran.us.r-project.org\", dependencies = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\npackage 'opendatatoronto' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\Mark\\AppData\\Local\\Temp\\RtmporYvYB\\downloaded_packages\n```\n:::\n\n```{.r .cell-code}\nlibrary(opendatatoronto)\nlibrary(dplyr)\nlibrary(leaflet)\n```\n:::\n\n\nThe following code is provided by the Open Toronto site to download the dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# get package\npackage <- show_package(\"a154790c-4a8a-4d09-ab6b-535ddb646770\")\n\n# get all resources for this package\nresources <- list_package_resources(\"a154790c-4a8a-4d09-ab6b-535ddb646770\")\n\n# identify datastore resources; by default, Toronto Open Data sets datastore resource format to CSV for non-geospatial and GeoJSON for geospatial resources\ndatastore_resources <- filter(resources, tolower(format) %in% c('csv', 'geojson'))\n\n# load the first datastore resource as a sample\ndata <- filter(datastore_resources, row_number()==1) %>% get_resource()\n```\n:::\n\n\n## Plotting the Data\n\nThe geometry in the dataset can be used directly with Leaflet, and the longitude and latitude do not need to be separated.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- data$geometry\n```\n:::\n\n\nCustom icons for the speed cameras can be used with the following code:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncameraicon <- makeIcon(\n        iconUrl = \"https://www.flaticon.com/svg/static/icons/svg/2164/2164608.svg\",\n        iconWidth = 35, iconHeight = 35\n)\n```\n:::\n\n\nFinally, all the data and options can be passed to the leaflet function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplt <- df %>%\n        leaflet() %>%\n        addTiles() %>%\n        addMarkers(icon = cameraicon, clusterOptions = markerClusterOptions(), popup = data$location)\n```\n:::\n\n::: {.cell}\n<iframe src=\"https://rstudio-pubs-static.s3.amazonaws.com/867843_8ceb2632490f457f9620fec73acc7e2c.html\" width=\"672\" height=\"400px\" data-external=\"1\"></iframe>\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}