{
  "hash": "9b5680fe3f19d7255cb2144bcaa8e1ae",
  "result": {
    "markdown": "---\ntitle: Underrated CRAN Packages\nauthor: Mark Edney\ndate: '2022-03-31'\nslug: []\ncategories:\n  - Project\n  - R\ndraft: false\nimage: 'Rlogo.svg'\ndescription: 'A search for popular R packages, that I would would otherwise miss.'\narchives:\n  - 2022/03\n---\n\n\n![](Rlogo.svg)\n\nI sit here looking for inspiration, nothing interesting to write about. Perhaps there are some popular R packages on CRAN that I don't know about? You can explore the data on downloads from CRAN with the `cranlogs` package. \n\n## Top CRAN downloads\n\nWith the following code, we can get the most popular packages from CRAN. The CRAN directory doesn't represent all R packages, but a good amount of them. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(cranlogs)\ntop100 <- cran_top_downloads(when = 'last-month', count = 100)\ntop100 %>% head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  rank  package   count       from         to\n1    1  ggplot2 2607933 2022-07-03 2022-08-01\n2    2    rlang 2236260 2022-07-03 2022-08-01\n3    3 devtools 1858106 2022-07-03 2022-08-01\n4    4       sf 1813750 2022-07-03 2022-08-01\n5    5      cli 1763566 2022-07-03 2022-08-01\n6    6     glue 1724853 2022-07-03 2022-08-01\n```\n:::\n:::\n\nFrom this list, we can see that the `tidyverse` represents a large amount of the top downloads with `ggplot2`, `rlang` and `dplyr`. The list includes the `sf` package for geospacial data, the `glue` package for string manipulation and the `cli` package which is used to create a command line interface for packages. Most of these packages I already have a good understanding of, so I need to narrow down the search.\n\n## Packages installed\n\nYou can get a list of your installed packages with the installed_packages function. You can then filter the top 100 list and remove anything you already have installed to find new packages. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nmine <- installed.packages() %>%\n        data.frame() %>%\n        select(Package)\nnew <- top100 %>%\n        filter(!package %in% mine$Package)\nnew\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   rank     package   count       from         to\n1     3    devtools 1858106 2022-07-03 2022-08-01\n2     8       rgeos 1588467 2022-07-03 2022-08-01\n3     9         rgl 1566013 2022-07-03 2022-08-01\n4    10        ragg 1494371 2022-07-03 2022-08-01\n5    11 textshaping 1490611 2022-07-03 2022-08-01\n6    22     pkgdown 1044161 2022-07-03 2022-08-01\n7    27  enrichwith  988618 2022-07-03 2022-08-01\n8    28      brglm2  984047 2022-07-03 2022-08-01\n9    32         zoo  893399 2022-07-03 2022-08-01\n10   49       Hmisc  737131 2022-07-03 2022-08-01\n11   55      nloptr  690693 2022-07-03 2022-08-01\n12   56        lme4  688426 2022-07-03 2022-08-01\n13   62       rJava  640331 2022-07-03 2022-08-01\n14   81         car  509135 2022-07-03 2022-08-01\n15   88   RcppEigen  475675 2022-07-03 2022-08-01\n16   89     ggrepel  469536 2022-07-03 2022-08-01\n17   90        jpeg  468127 2022-07-03 2022-08-01\n18  100        xlsx  447518 2022-07-03 2022-08-01\n```\n:::\n:::\n\n\nFrom some quick research, I have found the following about the new packages:\n\n*  `ragg` - a 2D library as an alternative to the RStudio default\n*  `rgl` - functions for 3D interactive graphics\n*  `rgeos` - a geometry package, but is currently planned to be retired at the end of 2023 for the `sf` package \n*  `zoo` - a library to deal with time series\n*  `pkgdown` - a library fOR building a blog website, I use blogdown\n*  `nloptr` - a library for solving non-linear optimization problems\n*  `Hmisc` - an assortment of different data analysis tools\n*  `lme4` - for fitting linear and generalized linear mixed-effects models\n*  `RcppEigen` - integration of the `eigen` library in R for linear algebra \n\n## Take-away\n\nHopefully your take-way is a simple method to explore R library that you have never heard about. I know that a few of the libraries seem interesting and worth further exploring. \n\nWhile we are at it, might as well find the daily values for the new packages and plot them for the last month. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nnew$package %>%\n        cran_downloads(when = \"last-month\") %>%\n        ggplot(aes(x = date, y = count, color = package)) +\n        geom_line()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/plot-1.png){width=672}\n:::\n:::",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}