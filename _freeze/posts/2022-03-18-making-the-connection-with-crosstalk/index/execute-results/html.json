{
  "hash": "5a8eabbe9c4863f4c6e6faa9dd542baa",
  "result": {
    "markdown": "---\ntitle: Making the Connection with Crosstalk\nauthor: Mark Edney\ndate: '2022-03-18'\nslug: []\ncategories:\n  - How-to\n  - R\n  - Shiny App\n  - GGPlot\n  - Rmarkdown\n  - Leaflet\ndraft: false\ndescription: 'An investigation of the crosstalk library in R with Toronto Apartment data'\nimage: talk.jpg\narchives:\n  - 2022/03\ntoc: true\n---\n\n\n![](talk.jpg)\nI recently wrote a post about [creating dashboards in R](https://datasandbox.netlify.app/post/2022-03-10-creating-dashboard-in-r/) which was based on the `Flexdashboard` library. My largest criticism was the lack of communication between visualizations on the same dashboard. This was before I learned about the `Crosstalk` package which adds this feature to html widgets, such as the Flexdashboard, to at least a limited degree.\n\n## Initialization\n\nThe `Crosstalk` package is available on CRAN and is loaded along with other important packages for this demonstration.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"crosstalk\")\nlibrary(crosstalk)\nlibrary(tidyverse)\nlibrary(flexdashboard)\nlibrary(plotly)\n```\n:::\n\n\nI have decided to use a Toronto Open dataset about city audits for apartment buildings. I limited the features to only the ones that I feel will be interesting to look at. More information about the data set can be found [here](https://open.toronto.ca/dataset/apartment-building-evaluation/).\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndownload.file(\"https://ckan0.cf.opendata.inter.prod-toronto.ca/dataset/4ef82789-e038-44ef-a478-a8f3590c3eb1/resource/979fb513-5186-41e9-bb23-7b5cc6b89915/download/Apartment%20Building%20Evaluation.csv\", \"data.csv\")\ndf <- read_csv(\"data.csv\") %>%\n        select(lng = LONGITUDE, \n               lat = LATITUDE, \n               SCORE, \n               YEAR_BUILT, \n               SITE_ADDRESS, \n               PROPERTY_TYPE) %>% \n        slice_sample(n = 200)\n```\n:::\n\n\nThe key to the `crosstalk` library is the `SharedData` functions. An object is created when a Data Frame is passed to the `SharedData$new` function. This is what enables communication between plots.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshared_df <- SharedData$new(df)\n```\n:::\n\n\n## Dashboard Creation\n\nThe dashboard is created pretty much as previous mentioned in [my dashboard post](https://datasandbox.netlify.app/post/2022-03-10-creating-dashboard-in-r/), with the exception that the shared Data Frame object is passed rather than the Data Frame.\n\nThe dashboard can include filters that are very similar to the Shiny Apt filters, with the `filter_*` family of functions.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilter_slider(\"Score\", \"SCORE\", shared_df, ~SCORE, round = TRUE)\nfilter_checkbox(\"Property Type\", \"PROPERTY_TYPE\", shared_df, ~PROPERTY_TYPE, inline = TRUE)\n```\n:::\n\n\n## Conclusion\n\nThe `Crosstalk` package does add some significant connectivity to Flex Dashboards. It is relatively simple to use with some basic functions. It does have the issue of not working with aggregating data. The utility of finding the mean value of a selection is something `Tableu` and `PowerBI` are still superior at. I think that it is still a welcome improvement.\n\n## Final Dashboard\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<iframe title=\"Cross Talk Demo\" width=\"100%\" height=\"500\" src=\"demo1.html\"></iframe>\n```\n:::\n:::\n\n\nPhoto by [Jason Goodman](https://unsplash.com/@jasongoodman_youxventures?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)on [Unsplash](https://unsplash.com/s/photos/discussion?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}